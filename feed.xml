<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2018-03-30T10:01:40+00:00</updated><id>/</id><title type="html">My Blog</title><subtitle>Description of my blog</subtitle><entry><title type="html">Installing Redis 4.0.9 on Ubuntu 16.04</title><link href="/installing-redis-4.0.9-on-ubuntu-16.04" rel="alternate" type="text/html" title="Installing Redis 4.0.9 on Ubuntu 16.04" /><published>2018-03-30T06:29:00+00:00</published><updated>2018-03-30T06:29:00+00:00</updated><id>/installing-redis-4.0.9-on-ubuntu-16.04</id><content type="html" xml:base="/installing-redis-4.0.9-on-ubuntu-16.04">&lt;h1 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h1&gt;

&lt;p&gt;Redis 소스를 컴파일하고 설치하기 위해 필요한 패키지들을 설치합니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get update &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get install gcc make
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;installing-redis&quot;&gt;Installing Redis&lt;/h1&gt;

&lt;p&gt;Redis 공식 사이트에서는 소스를 컴파일하여 설치하는 방법을 추천하고 있습니다.
이는, Linux 배포판의 패키지 관리자를 사용하여 설치할 경우 일반적으로 사용 가능한 버전이 최신이 아닐 수 있기 때문입니다.
Redis는 GCC 컴파일러와 libc 외에 다른 의존성이 없기 때문에 컴파일하여 설치하기 수월합니다.&lt;/p&gt;

&lt;p&gt;Redis를 컴파일하여 설치하기 위해 다음과 같이 작업합니다 (글 작성시의 Redis 버전은 &lt;code class=&quot;highlighter-rouge&quot;&gt;4.0.9&lt;/code&gt;입니다):&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget http://download.redis.io/redis-stable.tar.gz
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;tar &lt;/span&gt;xvzf redis-stable.tar.gz
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;redis-stable
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;make
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;컴파일이 정상적으로 완료되면 &lt;em&gt;src&lt;/em&gt; 디렉토리 내에 다음과 같은 실행가능한 바이너리들이 있는것을 확인할 수 있습니다:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;redis-server&lt;/strong&gt;: Redis 서버입니다. 서버를 구동할 때 사용합니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;redis-sentinel&lt;/strong&gt;: Redis 서버의 상태를 모니터링하고 장애 발생 시 복구하는 감시 프로그램입니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;redis-cli&lt;/strong&gt;: Redis를 사용하기 위한 Command Line Interface(CLI) 유틸입니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;redis-benchmark&lt;/strong&gt;: Redis의 성능을 테스트하기 위해 사용하는 프로그램입니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;redis-check-aof&lt;/strong&gt; and &lt;strong&gt;redis-check-dump&lt;/strong&gt;: 가끔 발생하는 데이터 손상시 유용합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;다음 명령어를 통해 위의 바이너리 파일들을 설치(복사) 합니다:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;설치되는 디렉토리는 기본값이 &lt;code class=&quot;highlighter-rouge&quot;&gt;usr/local/bin&lt;/code&gt;이며 PREFIX 값을 통해 원하는 곳에 설치 가능합니다:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;make &lt;span class=&quot;nv&quot;&gt;PREFIX&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/some/other/directory install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;starting-redis&quot;&gt;Starting Redis&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;redis-server&lt;/code&gt; 바이너리를 실행하여 서버가 정상적으로 동작하는지 확인합니다:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;redis-server
9308:C 28 Mar 05:09:25.302 &lt;span class=&quot;c&quot;&gt;# oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo&lt;/span&gt;
9308:C 28 Mar 05:09:25.303 &lt;span class=&quot;c&quot;&gt;# Redis version=4.0.9, bits=64, commit=00000000, modified=0, pid=9308, just started&lt;/span&gt;
9308:C 28 Mar 05:09:25.303 &lt;span class=&quot;c&quot;&gt;# Configuration loaded&lt;/span&gt;
9309:M 28 Mar 05:09:25.305 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Increased maximum number of open files to 10032 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;it was originally &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;to 1024&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
... more logs ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;redis-server&lt;/code&gt; 실행 시 아무 옵션을 주지 않으면 모든 설정값이 기본값을 사용하며, &lt;code class=&quot;highlighter-rouge&quot;&gt;redis-server /etc/redis.conf&lt;/code&gt;와 같이 설정 파일의 전체 경로를 첫번째 인자로 실행하면 설정 파일 내의 값들을 사용합니다.
Redis 소스 코드 내에 redis.conf 파일을 복사하여 서버에 맞게 설정하고 사용할 수 있습니다.&lt;/p&gt;

&lt;h1 id=&quot;check-if-redis-is-working&quot;&gt;Check if Redis is working&lt;/h1&gt;

&lt;p&gt;외부 프로그램들은 TCP 소켓과 Redis 프로토콜을 사용하여 Redis 서버와 통신할 수 있습니다.
Redis 프로토콜은 각 프로그래밍 언어에 맞게 라이브러리로 제공되며, 간단히 &lt;code class=&quot;highlighter-rouge&quot;&gt;redis-cli&lt;/code&gt;를 사용하여 Redis 서버로 명령을 보낼 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;redis-cli&lt;/code&gt;를 사용하여 현재 서버가 동작하고, 연결 가능한지 확인합니다:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;redis-cli ping
PONG
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;명령어 실행후 &lt;strong&gt;PONG&lt;/strong&gt; 메시지를 받으면 서버가 정상적으로 동작하고 있는겁니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;redis-cli&lt;/code&gt;는 실행 인자가 없을 시, Redis 호스트는 localhost를, 포트는 6379를 기본값으로 사용합니다.
이는 &lt;code class=&quot;highlighter-rouge&quot;&gt;-h &amp;lt;hostname&amp;gt;&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;-p &amp;lt;port&amp;gt;&lt;/code&gt; 인자를 통해 설정할 수 있으며 더 자세한 옵션은 &lt;code class=&quot;highlighter-rouge&quot;&gt;redis-cli --help&lt;/code&gt;를 통해 확인해볼 수 있습니다.&lt;/p&gt;

&lt;h1 id=&quot;installing-redis-more-properly&quot;&gt;Installing Redis more properly&lt;/h1&gt;

&lt;p&gt;Redis를 실행하기 위해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;redis-server&lt;/code&gt;를 직접 실행할 수 있지만, 시스템 부팅시 매번 직접 실행 해줘야하는 번거로움이 있습니다.
보다 나은 방법으로, init script를 통해 매 시스템 부팅시 자동으로 실행되게 할 수 있습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;우선 Redis 설정과 데이터를 저장하기 위한 디렉토리를 생성합니다:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mkdir /etc/redis
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mkdir /var/redis
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;다운받은 Redis 소스의 &lt;strong&gt;utils&lt;/strong&gt; 디렉토리에 있는 init script를 /etc/init.d 디렉토리에 복사합니다. 파일 이름은 사용하는 포트 번호를 포함하는 것이 좋습니다:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;cp utils/redis_init_script /etc/init.d/redis_6379
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;필요한 경우 init script 내의 항목을 수정합니다:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;vi /etc/init.d/redis_6379
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;다음으로, 다운받은 Redis 소스에서 설정 템플릿 파일을 /etc/redis/ 디렉토리에 포트번호를 이름으로 지정하여 복사합니다:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;cp redis.conf /etc/redis/6379.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Redis 인스턴스가 사용하는 디렉토리를 생성합니다:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mkdir /var/redis/6379
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;설정 파일(&lt;strong&gt;/etc/redis/6379.conf&lt;/strong&gt;)에서 다음 항목들을 수정합니다:
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;daemonize&lt;/strong&gt; yes&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;pidfile&lt;/strong&gt; /var/run/redis_6379.pid&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;port&lt;/strong&gt; 6379 (원하는 포트로 변경)&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;logfile&lt;/strong&gt; /var/log/redis_6379.log&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;dir&lt;/strong&gt; /var/redis/6379&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;마지막으로, Redis init script를 등록합니다:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;update-rc.d redis_6379 defaults
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;이제 다음 명령을 통해 Redis 서버를 실행 가능하며, 재부팅시에도 자동으로 Redis 인스턴스가 실행됩니다:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; /etc/init.d/redis_6379 start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;performance-tips-for-redis-cache-server&quot;&gt;Performance tips for Redis Cache Server&lt;/h1&gt;

&lt;p&gt;Redis 서버의 성능을 높이기 위해서는, 설치 후 몇가지 설정을 해주어야합니다.
Redis를 설치하고 바로 실행하면 3개의 경고(WARNING) 메시지가 출력되며 설정을 변경할 것을 제안합니다.&lt;/p&gt;

&lt;h2 id=&quot;raise-somaxconn-above-511&quot;&gt;Raise somaxconn above 511&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;# WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;somaxconn&lt;/code&gt;은 ‘Socket Max Connection’의 약어로 최대 연결 개수를 뜻합니다.
리눅스의 경우 메모리가 128MB 보다 작을 경우 128이 기본이고, 클 경우 1024가 기본입니다.&lt;/p&gt;

&lt;p&gt;동시에 너무 많은 요청이 올 경우, 예를 들어, somaxconn 값이 128일 경우 그 이상 요청이 오는 것에 대해서는 연결을 거부하게 됩니다.&lt;/p&gt;

&lt;p&gt;해당 값을 변경하기 위해서, 다음과 같이 수행할 수 있습니다 (설정은 재부팅 후 적용됩니다):&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;sed &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'$i \sysctl -w net.core.somaxconn=511\n'&lt;/span&gt; /etc/rc.local
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;docker-compose&lt;/strong&gt;를 사용하는 경우, &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose.yml&lt;/code&gt;의 Redis 설정에 다음 내용을 추가하여 반영 가능합니다:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;redis&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;sysctls&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;net.core.somaxconn&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;511&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;docker run&lt;/strong&gt;을 통해 Redis 서버를 실행하는 경우, 실행시 &lt;code class=&quot;highlighter-rouge&quot;&gt;--sysctl net.core.somaxconn=511&lt;/code&gt; 인자를 추가하여 실행합니다:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker run &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; some-redis &lt;span class=&quot;nt&quot;&gt;--sysctl&lt;/span&gt; net.core.somaxconn&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;511 &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; redis
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;vmovercommit_memory--1&quot;&gt;vm.overcommit_memory = 1&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;# WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add ‘vm.overcommit_memory = 1’ to /etc/sysctl.conf and then reboot or run the command ‘sysctl vm.overcommit_memory=1’ for this to take effect.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;해당 경고에 대해서는 다음과 같이 수행하여 설정값을 변경해줍니다:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;sed &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'$a\ \n# ensure redis background save issue\nvm.overcommit_memory = 1\n\nsystctl vm.overcommit_memory=1'&lt;/span&gt; /etc/sysctl.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;disable-thp&quot;&gt;Disable THP&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;# WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. 
This will create latency and memory usage issues with Redis.
To fix this issue run the command ‘echo never &amp;gt; /sys/kernel/mm/transparent_hugepage/enabled’ as root, and add it to your /etc/rc.local in order to retain the setting after a reboot.
Redis must be restarted after THP is disabled.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Transparent Hug Pages (THP)는 대량의 메모리를 관리하기 위한 한 방법으로, 페이지 크기를 확대(2MB or 1GB)하여 사용하는 방법입니다.
THP는 성능 개선을 목적으로하며, 대부분의 시스템 설정의 성능을 향상시키지만 DB와 같은 특정 상황에 대해서는 오히려 성능이 악화될 수 있습니다.&lt;/p&gt;

&lt;p&gt;Redis는 실행 시 THP가 enabled 되어 있는 경우 경고 메시지를 출력하며, 해당 기능을 끄도록 제안하고 있습니다.&lt;/p&gt;

&lt;p&gt;해당 기능은 아래와 같은 명령을 수행하는 것으로 끌 수 있습니다:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;never | &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;tee /sys/kernel/mm/transparent_hugepage/enabled
&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;never | &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;tee /sys/kernel/mm/transparent_hugepage/defrag
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;시스템 시작시 마다 해당 명령이 수행되도록 하기 위해 &lt;strong&gt;/etc/rc.local&lt;/strong&gt; 파일에 명령을 추가해 놓을 수 있습니다:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;sed &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'$i \echo never &amp;gt; /sys/kernel/mm/transparent_hugepage/enabled'&lt;/span&gt; /etc/rc.local
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;sed &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'$i \echo never &amp;gt; /sys/kernel/mm/transparent_hugepage/defrag\n'&lt;/span&gt; /etc/rc.local
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Docker를 사용하는 경우 &lt;strong&gt;/etc/rc.local&lt;/strong&gt; 파일이 &lt;code class=&quot;highlighter-rouge&quot;&gt;Read-only&lt;/code&gt;로 설정되어 있어서 설정을 변경할 수 없습니다. 
하지만 설정 확인(&lt;code class=&quot;highlighter-rouge&quot;&gt;cat /sys/kernel/mm/transparent_hugepage/enabled&lt;/code&gt;) 시 &lt;code class=&quot;highlighter-rouge&quot;&gt;madvise&lt;/code&gt;로 되어 있고, 메모리 사용 확인(&lt;code class=&quot;highlighter-rouge&quot;&gt;cat /proc/meminfo&lt;/code&gt;)시 HugePages를 사용하고 있지 않은 것 같습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;참고&quot;&gt;참고&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://redis.io/topics/quickstart&quot;&gt;Redis Quick Start&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.techandme.se/performance-tips-for-redis-cache-server/&quot;&gt;Performance tips for Redis Cache Server&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://allthatlinux.com/dokuwiki/doku.php?id=thp_transparent_huge_pages_%EA%B8%B0%EB%8A%A5%EA%B3%BC_%EC%84%A4%EC%A0%95_%EB%B0%A9%EB%B2%95&quot;&gt;THP(Transparent Huge Pages) 기능과 설정 방법&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Youngsup Oh</name></author><category term="Redis" /><category term="Getting started" /><summary type="html">Prerequisites</summary></entry></feed>